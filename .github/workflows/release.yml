name: Release

on:
  push:
    branches:
      - main

env:
  GIT_USER_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USER_NAME: ${{ secrets.GIT_NAME }}
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

permissions:
  contents: write

jobs:
  bump_version:
    if: "!startsWith(github.event.head_commit.message , 'bump:')"
    runs-on: ubuntu-latest
    name: 'Bump version'
    outputs:
      version: ${{ steps.cz.outputs.version }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ env.ACCESS_TOKEN }}
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11

      - name: Config Git User
        run: |
          git config --local user.email "$GIT_USER_EMAIL"
          git config --local user.name "$GIT_USER_NAME"
          git config --local pull.ff only

      - id: cz
        name: Create bump and changelog
        run: |
          python -m pip install -U commitizen
          cz bump --yes
          export REV=`cz version --project`
          echo "version=\"v$REV\"" >> $GITHUB_OUTPUT

      - name: Check access token
        id: check_token
        run: |
          if [[ -n "$ACCESS_TOKEN" ]]; then
            echo "continue=true" >> $GITHUB_OUTPUT
          else
            echo "continue=false" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.check_token.outputs.continue == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ env.ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          branch: 'main'
          directory: .
          tags: true

      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

  npm_publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: success()
    needs:
      - bump_version
    steps:
      - name: Check environment variables
        id: check_env
        run: |
          if [[ -n "$NPM_ACCESS_TOKEN" && -n "$ACCESS_TOKEN" ]]; then
            echo "continue=true" >> $GITHUB_OUTPUT
          else
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Checkout
        if: steps.check_env.outputs.continue == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ env.ACCESS_TOKEN }}
          ref: main

      - name: Setup NodeJS with cache
        if: steps.check_env.outputs.continue == 'true'
        uses: Drafteame/node-cache-action@main
        with:
          node-version: '20'

      - name: Install dependencies
        if: steps.check_env.outputs.continue == 'true'
        run: npm install

      - name: Publish to NPM
        if: steps.check_env.outputs.continue == 'true'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ env.NPM_ACCESS_TOKEN }}
          access: public
          strategy: upgrade

  release:
    name: Release version
    runs-on: ubuntu-latest
    needs:
      - bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ env.ACCESS_TOKEN }}
          ref: main

      - name: Create Release
        env:
          GH_TOKEN: ${{ env.ACCESS_TOKEN }}
        run: |
          gh release create ${{ needs.bump_version.outputs.version }} \
            --title ${{ needs.bump_version.outputs.version }} \
            --target main \
            --verify-tag \
            --latest
